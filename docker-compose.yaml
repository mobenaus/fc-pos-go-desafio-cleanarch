services:
  mysql:
    image: mysql:5.7
    container_name: mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: orders
      MYSQL_PASSWORD: root
    ports:
      - 3306:3306
    volumes:
      - .docker/mysql:/var/lib/mysql
    networks:
      cleanarch: 
    healthcheck:
      test: ["CMD", "mysql", "-u", "root", "-proot", "--execute", "SHOW DATABASES;"]
      interval: 5s
      retries: 20
      timeout: 5s

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    restart: always
    ports:
      - 5672:5672
      - 15672:15672
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    networks:
      cleanarch: 
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "check_running"]
      interval: 5s
      retries: 20
      timeout: 5s

  migrate:
    image: migrate/migrate
    container_name: migrate
    volumes:
        - ./migrations:/migrations
    command: ["-path", "/migrations", "-database",  "mysql://root:root@tcp(mysql:3306)/orders", "up"]
    networks:
      cleanarch:
    depends_on:
      mysql:
        condition: service_healthy

  goapp:
    container_name: goapp
    build: .
    ports:
      - "8080:8080"
      - "8000:8000"
      - "50051:50051"
    environment:
      DB_HOST: mysql
      DB_PORT: 3306
      DB_USER: root
      DB_PASSWORD: root
      DB_NAME: orders
      AMQP_HOST: rabbitmq
      AMQP_PORT: 5672
      AMQP_USER: guest
      AMQP_PASSWORD: guest
      WEB_SERVER_PORT: :8000
      GRPC_SERVER_PORT: 50051
      GRAPHQL_SERVER_PORT: 8080
      
    networks:
      cleanarch:
    depends_on:
      mysql:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy        



networks:
  cleanarch: